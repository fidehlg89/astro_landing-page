---
import { ExternalLink, Github } from "lucide-react";
import StatusBadge from "./StatusBadge.astro";
import ProjectTypeBadge from "./ProjectTypeBadge.astro";

interface Project {
  title: string;
  description: string;
  image: string;
  tags: string[];
  status: string;
  type: string;
  liveUrl?: string;
  githubUrl?: string;
}

const { title, description, image, tags, status, type, liveUrl, githubUrl } =
  Astro.props as Project;
---

<div
  class="bg-white rounded-xl overflow-hidden shadow-lg transition-all duration-300 hover:shadow-xl hover:-translate-y-1"
>
  <div class="relative h-48 overflow-hidden">
    <img src={image} alt={title} class="w-full h-full object-cover" />
    <div class="absolute top-4 right-4 flex gap-2">
      <StatusBadge status={status} />
      <ProjectTypeBadge type={type} />
    </div>
  </div>
  <div class="p-6">
    <h3 class="text-xl font-bold text-gray-900 mb-2">{title}</h3>
    <p class="text-gray-600 mb-4">{description}</p>
    <div class="flex flex-wrap gap-2 mb-4">
      {
        tags.map((tag) => (
          <span
            id={tag}
            class="px-3 py-1 bg-gray-100 text-gray-600 rounded-full text-sm"
          >
            {tag}
          </span>
        ))
      }
    </div>
    <div class="flex gap-4">
      {
        liveUrl && (
          <a
            href={liveUrl}
            target="_blank"
            rel="noopener noreferrer"
            class="flex items-center gap-2 text-blue-600 hover:text-blue-800"
          >
            <ExternalLink size={18} />
            <span>Live Demo</span>
          </a>
        )
      }
      {
        githubUrl && (
          <a
            href={githubUrl}
            target="_blank"
            rel="noopener noreferrer"
            class="flex items-center gap-2 text-gray-700 hover:text-gray-900"
          >
            <Github size={18} />
            <span>Source Code</span>
          </a>
        )
      }
    </div>
  </div>
</div>
